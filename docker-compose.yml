services:
  bot:
    container_name: gprdb_bot # Added container name
    image: morenicano/gprdb_bot:latest # Pull the image from Docker Hub
    # Use environment variables for sensitive data
    environment:
      DISCORD_BOT_TOKEN: ${DISCORD_BOT_TOKEN}
      POSTGRES_HOST: ${POSTGRES_HOST} # Use the service name as the hostname
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: 5432
    networks:
      - gprdb
    depends_on:
      - postgres
      
  postgres:
    container_name: gprdb_postgres # Added container name
    image: postgres:latest # Use the latest PostgreSQL image
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - ${DATA_FOLDER_PATH}/postgres_data:/var/lib/postgresql/data  # Mount the named volume
    networks:
      - gprdb

  # Flask app service
  webapp:
    container_name: gprdb_webapp # Added container name
    image: morenicano/gprdb_webapp:latest
    ports:
      - "${WEBAPP_PORT}:5000" # Expose the Flask app port
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST} # same as the postgres service name
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ${DATA_FOLDER_PATH}/templates:/app/templates
    networks:
      - gprdb
    depends_on:
      - postgres
      
volumes:
  postgres_data:
  
networks:
  gprdb:
    driver: bridge # Use the default bridge network driver
    external: false