services:
  bot:
    container_name: gprdb_bot
    image: morenicano/gprdb_bot:latest
    environment:
      DISCORD_BOT_TOKEN: ${DISCORD_BOT_TOKEN}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: 5432
    networks:
      - gprdb
    depends_on:
      - postgres
      - webapp

  postgres:
    container_name: gprdb_postgres
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - ${DATA_FOLDER_PATH}/postgres_data:/var/lib/postgresql/data
    networks:
      - gprdb

  webapp:
    container_name: gprdb_webapp
    image: morenicano/gprdb_webapp:latest
    ports:
      - "${WEBAPP_PORT}:5000"
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ${DATA_FOLDER_PATH}/templates:/app/templates
    networks:
      - gprdb
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  postgres_data:

networks:
  gprdb:
    driver: bridge
    external: false